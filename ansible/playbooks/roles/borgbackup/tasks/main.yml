# 1. Borgのインストール
- name: Install Borg Backup
  package:
    name: borgbackup
    state: present

# 2. ディレクトリ構造の作成
- name: Create necessary directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  loop:
    - "{{ borg_backup_dir }}"
    - "{{ borg_backup_dir }}/config"
    - "{{ borg_backup_dir }}/logs"
    - "{{ borg_backup_dir }}/cache"
    - "{{ backup_dir }}"

# 3. シークレット管理
- name: Check if Borg secrets file exists
  stat:
    path: "{{ borg_secrets_file }}"
  register: borg_secrets_file_stat

- name: Generate repository passphrases
  when: not borg_secrets_file_stat.stat.exists
  block:
    - name: Generate random passphrases for each repository
      set_fact:
        generated_passphrases: "{{ generated_passphrases | default({}) | combine({item.name: lookup('password', '/dev/null chars=ascii_letters,digits length=32')}) }}"
      loop: "{{ borg_repositories }}"

    - name: Save passphrases to secrets file
      copy:
        dest: "{{ borg_secrets_file }}"
        content: |
          borg_passphrases:
            {% for repo in borg_repositories %}
            {{ repo.name }}: "{{ generated_passphrases[repo.name] }}"
            {% endfor %}
        mode: '0600'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

- name: Load passphrases from secrets file
  when: borg_secrets_file_stat.stat.exists
  include_vars:
    file: "{{ borg_secrets_file }}"
    name: borg_secrets

# 4. 設定ファイルの配置
- name: Create Borg configuration file
  template:
    src: config.sh.j2
    dest: "{{ borg_backup_dir }}/config/config.sh"
    mode: '0600'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

# 5. バックアップスクリプトの配置
- name: Deploy Borg backup script
  template:
    src: backup.sh.j2
    dest: "{{ borg_backup_dir }}/borg-backup.sh"
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

# 6. 初期レポジトリセットアップ
- name: Check if Borg repositories already exist
  stat:
    path: "{{ borg_backup_dir }}/cache/{{ item.name }}.initialized"
  loop: "{{ borg_repositories }}"
  register: borg_repo_init_check

- name: Initialize Borg repositories if they don't exist
  shell: |
    {% if borg_secrets_file_stat.stat.exists %}
    export BORG_PASSPHRASE="{{ borg_secrets.borg_passphrases[item.0.name] }}"
    {% else %}
    export BORG_PASSPHRASE="{{ generated_passphrases[item.0.name] }}"
    {% endif %}
    borg init --encryption=repokey-blake2 "{{ item.0.url }}"
    touch "{{ borg_backup_dir }}/cache/{{ item.0.name }}.initialized"
  args:
    creates: "{{ borg_backup_dir }}/cache/{{ item.0.name }}.initialized"
  loop: "{{ borg_repositories | zip(borg_repo_init_check.results) | list }}"
  loop_control:
    label: "{{ item.0.name }}"
  when: not item.1.stat.exists
  no_log: true

# 7. Cronジョブの設定
- name: Set up cron job for automated backups
  cron:
    name: "Run Borg backup"
    hour: "{{ borg_backup_hour | default('2') }}"
    minute: "{{ borg_backup_minute | default('0') }}"
    job: "{{ borg_backup_dir }}/borg-backup.sh > {{ borg_backup_dir }}/logs/backup_$(date +\\%Y\\%m\\%d).log 2>&1"
    user: "{{ ansible_user }}"

# 8. シンボリックリンク作成（便利なアクセス用）
- name: Create symlink for easy access
  file:
    src: "{{ borg_backup_dir }}/borg-backup.sh"
    dest: "/usr/local/bin/borg-backup"
    state: link
    force: yes

# ラズベリーパイがバックアップ用に準備されているか確認
- name: Check if Raspberry Pi is reachable
  command: ping -c 1 {{ raspberry_pi_host }}
  register: ping_result
  failed_when: ping_result.rc != 0
  changed_when: false
  ignore_errors: true

- name: Warn if Raspberry Pi is not reachable
  debug:
    msg: "警告: ラズベリーパイ ({{ raspberry_pi_host }}) に接続できません。バックアップが失敗する可能性があります。"
  when: ping_result.rc != 0

# リモート側のディレクトリが存在するか確認
- name: Check if backup directory exists on Raspberry Pi
  command: ssh {{ raspberry_pi_user }}@{{ raspberry_pi_host }} "mkdir -p {{ raspberry_pi_backup_dir }}/{{ inventory_hostname }}"
  register: mkdir_result
  failed_when: false
  changed_when: mkdir_result.rc == 0