- name: Ensure Prometheus is enabled and running
  systemd:
    name: prometheus
    enabled: yes
    state: started

- name: Install prerequisites for Grafana
  apt:
    name:
      - apt-transport-https
      - software-properties-common
      - wget
    state: present
    update_cache: yes

- name: Ensure /etc/apt/keyrings directory exists
  file:
    path: /etc/apt/keyrings
    state: directory

- name: Download and add Grafana GPG key
  get_url:
    url: https://apt.grafana.com/gpg.key
    dest: /tmp/grafana.gpg
  register: download_gpg

- name: Import Grafana GPG key
  shell: gpg --dearmor < /tmp/grafana.gpg | sudo tee /etc/apt/keyrings/grafana.gpg > /dev/null
  when: download_gpg.changed

- name: Add Grafana stable repository
  lineinfile:
    path: /etc/apt/sources.list.d/grafana.list
    line: 'deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com stable main'
    create: yes

- name: Update apt cache after adding new repositories
  apt:
    update_cache: yes

- name: Install Grafana
  apt:
    name: grafana
    state: present

- name: Ensure Grafana is enabled and running
  systemd:
    name: grafana-server
    enabled: yes
    state: started

- name: Deploy Grafana Nginx configuration
  template:
    src: nginx_grafana.conf.j2
    dest: /etc/nginx/conf.d/grafana.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - Reload Nginx

- name: Check if Nginx configuration exists for Grafana
  stat:
    path: /etc/nginx/conf.d/grafana.conf
  register: grafana_nginx_conf

- name: Fail if Nginx configuration does not exist for Grafana
  fail:
    msg: 'Nginx configuration file /etc/nginx/conf.d/grafana.conf does not exist.'
  when: not grafana_nginx_conf.stat.exists

- name: Reload Nginx if configuration file exists
  become: yes
  become_user: root
  systemd:
    name: nginx
    state: reloaded
  when: grafana_nginx_conf.stat.exists
