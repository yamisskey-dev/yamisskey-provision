- name: Create Docker Compose directory
  file:
    path: /opt/minio
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create Minio data directory
  file:
    path: /opt/minio/minio-data
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Load Minio secrets from secrets.yml
  set_fact:
    minio_root_user: "{{ (lookup('file', minio_secrets_file) | from_yaml).minio.root_user }}"
    minio_root_password: "{{ (lookup('file', minio_secrets_file) | from_yaml).minio.root_password }}"

- name: Deploy Docker Compose file for Minio
  template:
    src: templates/minio_docker-compose.yml.j2
    dest: /opt/minio/docker-compose.yml
    owner: root
    group: root
    mode: '0644'

- name: Start Minio using Docker Compose
  command: docker-compose up -d
  args:
    chdir: /opt/minio

- name: Download Minio Client
  get_url:
    url: https://dl.min.io/client/mc/release/linux-amd64/mc
    dest: /usr/local/bin/mc
    mode: '0755'

- name: Set Minio Client alias
  command: /usr/local/bin/mc alias set "{{ minio_alias }}" http://localhost:9000 "{{ minio_root_user }}" "{{ minio_root_password }}"

- name: Check if bucket exists
  command: /usr/local/bin/mc ls "{{ minio_alias }}/{{ minio_bucket_name }}"
  register: bucket_check
  ignore_errors: yes

- name: Create bucket in MinIO
  command: /usr/local/bin/mc mb "{{ minio_alias }}/{{ minio_bucket_name }}"
  when: bucket_check.rc != 0

- name: Configure Nginx for MinIO
  template:
    src: templates/nginx_minio.conf.j2
    dest: /etc/nginx/conf.d/minio.conf
    owner: root
    group: root
    mode: '0644'

- name: Enable Nginx site configuration
  command: nginx -s reload

- name: Restart Nginx
  service:
    name: nginx
    state: restarted
