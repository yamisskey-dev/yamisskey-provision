# playbooks/roles/growi/tasks/main.yml
---
# 必要なディレクトリを作成
- name: Create GROWI parent directory
  file:
    path: "{{ growi_dir | dirname }}"
    state: directory
    mode: '0755'

# 公式リポジトリのクローン
- name: Clone GROWI docker-compose repository
  git:
    repo: https://github.com/weseek/growi-docker-compose.git
    dest: "{{ growi_dir }}"
    version: master

# secrets.ymlの確認
- name: Check if secrets file exists
  stat:
    path: '{{ growi_secrets_file }}'
  register: growi_secrets_file_stat

# パスワードシードの生成
- name: Generate password seed
  shell: 'cat /dev/urandom | base64 -w 0 | fold -w 32 | head -n 1'
  register: password_seed_output
  when: not growi_secrets_file_stat.stat.exists

# 秘密情報の保存
- name: Save secrets to file
  copy:
    dest: '{{ growi_secrets_file }}'
    content: |
      growi:
        password_seed: "{{ password_seed_output.stdout }}"
    mode: '0600'
  when: not growi_secrets_file_stat.stat.exists

# 新しい秘密情報のロード
- name: Load new secrets
  set_fact:
    growi_secrets: 
      growi:
        password_seed: "{{ password_seed_output.stdout }}"
  when: not growi_secrets_file_stat.stat.exists

# 既存の秘密情報のロード
- name: Load existing secrets
  set_fact:
    growi_secrets: "{{ lookup('file', growi_secrets_file) | from_yaml }}"
  when: growi_secrets_file_stat.stat.exists

# docker-compose.ymlの更新
- name: Update docker-compose.yml
  command: sed -i 's/127.0.0.1:3000:3000/127.0.0.1:3004:3000/' {{ growi_dir }}/docker-compose.yml

- name: Update password seed in docker-compose.yml
  replace:
    path: "{{ growi_dir }}/docker-compose.yml"
    regexp: 'PASSWORD_SEED=changeme'
    replace: 'PASSWORD_SEED={{ growi_secrets.growi.password_seed }}'

# Nginx設定
- name: Copy Nginx configuration
  template:
    src: nginx_growi.conf.j2
    dest: /etc/nginx/conf.d/growi.conf
  notify: reload nginx

# コンテナの起動
- name: Start GROWI containers
  docker_compose:
    project_src: "{{ growi_dir }}"
    state: present

# 起動確認
- name: Wait for GROWI to be available
  uri:
    url: "http://localhost:3004"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 5