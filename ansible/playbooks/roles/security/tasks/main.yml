- name: Discover cloudflared tunnel UUID
  shell: cloudflared tunnel list --origincert /home/{{ user_name }}/.cloudflared/cert.pem | awk '/yamisskey/ {print $1}'
  register: tunnel_uuid
  changed_when: false

- name: Set cloudflared config.yml content
  copy:
    content: |
      tunnel: {{ tunnel_uuid.stdout }}
      credentials-file: /home/{{ user_name }}/.cloudflared/{{ tunnel_uuid.stdout }}.json

      ingress:
        - hostname: yami.ski
          service: http://localhost:8080
        - hostname: grafana.yami.ski
          service: http://localhost:3000
        - service: http_status:404
    dest: '/home/{{ user_name }}/.cloudflared/config.yml'
    owner: '{{ user_name }}'
    mode: '0600'

- name: Create systemd service file for cloudflared
  copy:
    content: |
      [Unit]
      Description=cloudflared
      Wants=network-online.target
      After=network-online.target

      [Service]
      TimeoutStartSec=0
      Type=notify
      ExecStart=/usr/bin/cloudflared tunnel run yamisskey --origincert /home/{{ user_name }}/.cloudflared/cert.pem
      Restart=on-failure
      User={{ user_name }}

      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/cloudflared.service
    mode: '0644'

- name: Enable and start cloudflared service
  systemd:
    name: cloudflared
    state: started
    enabled: true
  register: cloudflared_service_result
  failed_when: cloudflared_service_result.failed

- name: Check cloudflared service status on failure
  shell: |
    systemctl status cloudflared.service
    journalctl -xeu cloudflared.service
  when: cloudflared_service_result.failed
  register: cloudflared_service_logs

- name: Debug cloudflared service logs
  debug:
    msg: '{{ cloudflared_service_logs.stdout }}'
  when: cloudflared_service_result.failed

- name: Reload Nginx
  systemd:
    name: nginx
    state: reloaded

- name: Backup original jail.conf
  copy:
    src: /etc/fail2ban/jail.conf
    dest: /etc/fail2ban/jail.conf.bak
    remote_src: yes
  become: true
  notify: Restart fail2ban

- name: Copy custom jail.local
  copy:
    src: '{{ set_dir }}/fail2ban/jail.local'
    dest: /etc/fail2ban/jail.local
  become: true
  notify: Restart fail2ban

- name: Ensure fail2ban is started and enabled
  systemd:
    name: fail2ban
    state: started
    enabled: true
  become: true

- name: Check fail2ban status for sshd
  command: fail2ban-client status sshd
  register: result
  failed_when: "'sshd' not in result.stdout"
  become: true

- name: Debug fail2ban status
  debug:
    msg: '{{ result.stdout }}'

- name: Ensure log directory for ClamAV exists
  file:
    path: /var/log/clamav
    state: directory
    owner: clamav
    group: adm
    mode: '0755'
  become: true

- name: Ensure freshclam log file is writable
  file:
    path: /var/log/clamav/freshclam.log
    state: touch
    owner: clamav
    group: adm
    mode: '0644'
  become: true

- name: Update ClamAV virus database
  command: freshclam
  become: true
  failed_when: false
  changed_when: false

- name: Ensure ClamAV daemon is started and enabled
  systemd:
    name: clamav-daemon
    state: started
    enabled: true
  become: true

- name: Schedule daily ClamAV scan
  cron:
    name: 'Daily ClamAV scan'
    minute: '0'
    hour: '2'
    job: "/usr/bin/clamscan -r / --exclude-dir='^/sys' --exclude-dir='^/proc' --exclude-dir='^/dev' --log=/var/log/clamav/clamav-$(date +\\%Y\\%m\\%d).log"
  become: true

