---
- name: Create ModSecurity NGINX directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  loop:
    - "/etc/modsecurity-nginx"
    - "/var/log/nginx"
    - "/etc/modsecurity-nginx/rules"
    - "/var/cache/nginx"
    - "/var/cache/nginx/minio"

- name: Set proper permissions for log directory
  file:
    path: "/var/log/nginx"
    mode: '0777'
    owner: root
    group: root
    state: directory

- name: Create custom rules before CRS
  template:
    src: REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf.j2
    dest: "/etc/modsecurity-nginx/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf"
    mode: '0644'
  notify: restart modsecurity nginx

- name: Create custom rules after CRS
  template:
    src: RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf.j2
    dest: "/etc/modsecurity-nginx/rules/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf"
    mode: '0644'
  notify: restart modsecurity nginx

- name: Create conf.d directory for individual service configs
  file:
    path: "/etc/modsecurity-nginx/conf.d"
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Create individual service nginx configurations
  template:
    src: "conf.d/{{ item }}.conf.j2"
    dest: "/etc/modsecurity-nginx/conf.d/{{ item }}.conf"
    mode: '0644'
  loop:
    - 00-shared      # Common settings (loaded first)
    - misskey        # Main Misskey service
    - synapse        # Matrix Synapse
    - element        # Element Web client
    - jitsi          # Jitsi Meet
    - ctfd           # CTFd platform
    - grafana        # Grafana monitoring
    - minio          # MinIO object storage
    - vikunja        # Vikunja task management
    - cryptpad       # CryptPad collaborative editor
    - zitadel        # Zitadel identity provider
    - searxng        # SearXNG search engine
    - outline        # Outline wiki
    - uptime         # Uptime Kuma monitoring
    - mcaptcha       # mCaptcha service
    - neo_quesdon    # Neo-Quesdon Q&A
    - lemmy          # Lemmy link aggregator
  notify: restart modsecurity nginx

- name: Create Docker Compose file for ModSecurity NGINX
  template:
    src: docker-compose.yml.j2
    dest: "/etc/modsecurity-nginx/docker-compose.yml"
    mode: '0644'
  notify: restart modsecurity nginx

- name: Pull ModSecurity NGINX Docker image
  community.docker.docker_image:
    name: "{{ modsecurity_nginx_image }}:{{ modsecurity_nginx_tag }}"
    source: pull
    force_source: yes

- name: Start ModSecurity NGINX container
  community.docker.docker_compose_v2:
    project_src: "/etc/modsecurity-nginx"
    state: present

- name: Ensure ModSecurity NGINX is running
  community.docker.docker_container_info:
    name: "{{ modsecurity_nginx_name }}"
  register: container_info

- name: Display container status
  debug:
    msg: "ModSecurity NGINX container is {{ container_info.container.State.Status }}"
