- name: Start Tor
  become_user: root
  systemd:
    name: tor@default
    enabled: yes
    state: restarted

- name: Ensure Tor hidden service directory exists
  file:
    path: /var/lib/tor/misskey
    state: directory
    owner: debian-tor
    group: debian-tor
    mode: '0700'

- name: Create output directory for onion keys
  file:
    path: "{{ mkp224o_output_dir }}"
    state: directory

- name: Check if sufficient onion domains already exist
  shell: |
    ls {{ mkp224o_output_dir }}/*.onion/hs_ed25519_secret_key | wc -l
  register: existing_domain_count

- name: Generate onion domain if not enough exist
  shell: |
    DOMAIN_PREFIX="{{ domain_prefix }}"
    docker run --rm -d -v {{ mkp224o_output_dir }}:/keys --name mkp224o ghcr.io/cathugger/mkp224o:master -d /keys "$DOMAIN_PREFIX"
  args:
    chdir: "{{ mkp224o_output_dir }}"
  async: 600  # 10åˆ†
  poll: 0
  register: async_result
  become: yes
  become_method: sudo
  when: existing_domain_count.stdout | int < 10

- name: Stop docker container if enough domains are generated
  shell: docker stop mkp224o || true
  when: existing_domain_count.stdout | int >= 10
  become: yes
  become_method: sudo

- name: Wait for onion domain generation to complete
  async_status:
    jid: "{{ async_result.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 60
  delay: 10
  when: existing_domain_count.stdout | int < 10

- name: Check if the onion domain was generated
  stat:
    path: "{{ mkp224o_output_dir }}/*.onion/hs_ed25519_secret_key"
  register: onion_key_stat

- name: Fail if the onion domain was not generated
  fail:
    msg: "Failed to generate the onion domain."
  when: not onion_key_stat.stat.exists

- name: Copy generated keys to tor hidden service directory
  copy:
    src: "{{ item }}"
    dest: "/var/lib/tor/misskey/"
    owner: debian-tor
    group: debian-tor
    mode: '0400'
  loop:
    - "{{ mkp224o_output_dir }}/*.onion/hs_ed25519_secret_key"
    - "{{ mkp224o_output_dir }}/*.onion/hs_ed25519_public_key"

- name: Set correct permissions on tor hidden service directory
  file:
    path: /var/lib/tor/misskey
    owner: debian-tor
    group: debian-tor
    recurse: yes

- name: Read and display Tor URL for Misskey
  command: cat /var/lib/tor/misskey/hostname
  register: tor_hostname
  changed_when: false

- name: Display Tor URL for Misskey
  debug:
    msg: 'Misskey Tor URL: http://{{ tor_hostname.stdout }}'

- name: Save Tor URL in a text file
  copy:
    content: 'http://{{ tor_hostname.stdout }}'
    dest: '{{ misskey_dir }}/tor.txt'

- name: Configure Tor hidden service
  blockinfile:
    path: /etc/tor/torrc
    block: |
      HiddenServiceDir /var/lib/tor/misskey/
      HiddenServicePort 80 unix:/var/run/tor-misskey.sock
      HiddenServiceVersion 3
    marker: '# {mark} ANSIBLE MANAGED BLOCK - Misskey Hidden Service'
    insertafter: EOF
  notify: Reload Tor

- name: Configure Privoxy to route traffic through Tor
  blockinfile:
    path: /etc/privoxy/config
    block: |
      forward-socks5 / 127.0.0.1:9050 .
    marker: '# {mark} ANSIBLE MANAGED BLOCK - Privoxy Configuration'
    insertafter: EOF
  notify: Restart Privoxy

- name: Ensure Privoxy is enabled and running
  systemd:
    name: privoxy
    enabled: yes
    state: started