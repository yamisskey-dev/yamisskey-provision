- name: Start Tor
  systemd:
    name: tor@default
    enabled: yes
    state: restarted

- name: Ensure Tor hidden service directories exist
  file:
    path: "{{ item.value.dir }}"
    state: directory
    owner: debian-tor
    group: debian-tor
    mode: '0700'
  loop: "{{ hidden_services | dict2items }}"

- name: Create output directory for onion keys
  file:
    path: "{{ mkp224o_output_dir }}"
    state: directory

- name: Create output directories for each service prefix
  file:
    path: "{{ mkp224o_output_dir }}/{{ item.key }}"
    state: directory
  loop: "{{ hidden_services | dict2items }}"

- name: List existing onion domains for each service
  shell: |
    find {{ mkp224o_output_dir }}/{{ item.key }} -maxdepth 1 -name "*.onion"
  register: list_onion_domains
  loop: "{{ hidden_services | dict2items }}"
  changed_when: false

- name: Check if mkp224o containers are running
  shell: docker ps --filter "name=mkp224o-{{ item.key }}" --filter "status=running" --format "{{'{{.ID}}'}}"
  register: mkp224o_containers_running
  loop: "{{ hidden_services | dict2items }}"
  changed_when: false

- name: Stop mkp224o containers if onion domains are found
  shell: docker stop mkp224o-{{ item.0.key }}
  loop: "{{ hidden_services | dict2items | zip(list_onion_domains.results) | list }}"
  when: 
    - item.1.stdout_lines | length > 0 
    - mkp224o_containers_running.results[ansible_loop.index0].stdout != ""

- name: Start mkp224o containers if not running and no onion domain is found
  shell: docker run -d --name mkp224o-{{ item.0.key }} -v {{ mkp224o_output_dir }}/{{ item.0.key }}:/keys ghcr.io/cathugger/mkp224o:master -d /keys "{{ item.0.key }}"
  loop: "{{ hidden_services | dict2items | zip(list_onion_domains.results) | list }}"
  when: 
    - item.1.stdout_lines | length == 0 
    - mkp224o_containers_running.results[ansible_loop.index0].stdout == ""

- name: Debug message for mkp224o container states
  debug:
    msg: "mkp224o-{{ item.0.key }} container {{ 'started' if item.1.stdout_lines | length == 0 and mkp224o_containers_running.results[ansible_loop.index0].stdout == '' else 'stopped' if item.1.stdout_lines | length > 0 and mkp224o_containers_running.results[ansible_loop.index0].stdout != '' else 'already running' }}"
  loop: "{{ hidden_services | dict2items | zip(list_onion_domains.results) | list }}"

- name: Set facts for onion directories if found
  set_fact:
    "{{ item.0.key }}_onion_dir": "{{ item.1.stdout_lines[0] }}"
  loop: "{{ hidden_services | dict2items | zip(list_onion_domains.results) | list }}"
  when: item.1.stdout_lines | length > 0

- name: Copy generated keys to tor hidden service directories
  copy:
    src: "{{ lookup('vars', item.key + '_onion_dir') }}/hs_ed25519_secret_key"
    dest: "{{ item.value.dir }}/hs_ed25519_secret_key"
    owner: debian-tor
    group: debian-tor
    mode: '0400'
    remote_src: yes
  loop: "{{ hidden_services | dict2items }}"
  when: lookup('vars', item.key + '_onion_dir', default=false)

- name: Copy hostname files to tor hidden service directories
  copy:
    src: "{{ lookup('vars', item.key + '_onion_dir') }}/hostname"
    dest: "{{ item.value.dir }}/hostname"
    owner: debian-tor
    group: debian-tor
    mode: '0644'
    remote_src: yes
  loop: "{{ hidden_services | dict2items }}"
  when: lookup('vars', item.key + '_onion_dir', default=false)

- name: Set correct permissions on tor hidden service directories
  file:
    path: "{{ item.value.dir }}"
    owner: debian-tor
    group: debian-tor
    recurse: yes
  loop: "{{ hidden_services | dict2items }}"

- name: Read and register Tor URLs
  command: "cat {{ item.value.dir }}/hostname"
  register: tor_hostnames
  loop: "{{ hidden_services | dict2items }}"
  changed_when: false

- name: Display Tor URLs
  debug:
    msg: "{{ item.item.key | title }} Tor URL: http://{{ item.stdout }}"
  loop: "{{ tor_hostnames.results }}"

- name: Save Tor URLs in YAML files
  copy:
    content: |
      tor_url: 'http://{{ item.stdout }}'
    dest: "{{ backup_dir }}/{{ item.item.key }}/onion_domain.yml"
  loop: "{{ tor_hostnames.results }}"

- name: Configure Tor hidden services in torrc
  template:
    src: templates/torrc.j2
    dest: /etc/tor/torrc
    owner: root
    group: root
    mode: '0644'
  notify: Reload Tor

- name: Deploy Nginx configurations for onion services
  template:
    src: "templates/nginx_{{ item.key }}_onion.conf.j2"
    dest: "/etc/nginx/conf.d/{{ item.key }}-onion.conf"
    owner: root
    group: root
    mode: '0644'
  loop: "{{ hidden_services | dict2items }}"
  notify: Reload Nginx

- name: Add Onion-Location headers to general Nginx configurations
  lineinfile:
    path: "/etc/nginx/conf.d/{{ item.item.key }}.conf"
    line: 'add_header Onion-Location "http://{{ item.stdout }}$request_uri" always;'
    insertafter: 'server_name'
  loop: "{{ tor_hostnames.results }}"
  notify: Reload Nginx