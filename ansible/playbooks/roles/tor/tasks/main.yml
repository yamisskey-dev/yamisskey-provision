- name: Start Tor
  systemd:
    name: tor@default
    enabled: yes
    state: restarted

- name: Ensure Tor hidden service directory exists
  file:
    path: /var/lib/tor/misskey
    state: directory
    owner: debian-tor
    group: debian-tor
    mode: '0700'

- name: Create output directory for onion keys
  file:
    path: '{{ mkp224o_output_dir }}'
    state: directory

- name: Create output directory for the current prefix
  file:
    path: '{{ mkp224o_output_dir }}/{{ domain_prefix }}'
    state: directory

- name: List existing onion domains
  shell: |
    find {{ mkp224o_output_dir }}/{{ domain_prefix }} -maxdepth 1 -name "*.onion"
  register: list_onion_domains
  changed_when: false

- name: Check if mkp224o container is running
  shell: docker ps --filter "name=mkp224o" --filter "status=running" --format "{{'{{.ID}}'}}"
  register: mkp224o_container_running
  changed_when: false

- name: Stop mkp224o container if onion domain is found
  shell: docker stop mkp224o
  when: list_onion_domains.stdout_lines | length > 0 and mkp224o_container_running.stdout != ""

- name: Start mkp224o container if not running and no onion domain is found
  shell: docker run -d --name mkp224o -v {{ mkp224o_output_dir }}/{{ domain_prefix }}:/keys ghcr.io/cathugger/mkp224o:master -d /keys "{{ domain_prefix }}"
  when: list_onion_domains.stdout_lines | length == 0 and mkp224o_container_running.stdout == ""

- name: Debug message for mkp224o container state
  debug:
    msg: "mkp224o container {{ 'started' if list_onion_domains.stdout_lines | length == 0 and mkp224o_container_running.stdout == '' else 'stopped' if list_onion_domains.stdout_lines | length > 0 and mkp224o_container_running.stdout != '' else 'already running' }}"

- name: Set fact for first onion directory if found
  set_fact:
    onion_dir: "{{ list_onion_domains.stdout_lines[0] }}"
  when: list_onion_domains.stdout_lines | length > 0

- name: Debug onion_dir
  debug:
    msg: 'Onion directory set to: {{ onion_dir }}'
  when: onion_dir is defined

- name: Copy generated secret keys to tor hidden service directory
  copy:
    src: '{{ onion_dir }}/hs_ed25519_secret_key'
    dest: '/var/lib/tor/misskey/hs_ed25519_secret_key'
    owner: debian-tor
    group: debian-tor
    mode: '0400'
    remote_src: yes
  when: onion_dir is defined

- name: Copy generated public keys to tor hidden service directory
  copy:
    src: '{{ onion_dir }}/hs_ed25519_public_key'
    dest: '/var/lib/tor/misskey/hs_ed25519_public_key'
    owner: debian-tor
    group: debian-tor
    mode: '0400'
    remote_src: yes
  when: onion_dir is defined

- name: Copy hostname file to tor hidden service directory
  copy:
    src: '{{ onion_dir }}/hostname'
    dest: '/var/lib/tor/misskey/hostname'
    owner: debian-tor
    group: debian-tor
    mode: '0644'
    remote_src: yes
  when: onion_dir is defined

- name: Set correct permissions on tor hidden service directory
  file:
    path: /var/lib/tor/misskey
    owner: debian-tor
    group: debian-tor
    recurse: yes

- name: Read and display Tor URL for Misskey
  command: cat /var/lib/tor/misskey/hostname
  register: tor_hostname
  changed_when: false

- name: Display Tor URL for Misskey
  debug:
    msg: 'Misskey Tor URL: http://{{ tor_hostname.stdout }}'

- name: Save Tor URL in a text file
  copy:
    content: 'http://{{ tor_hostname.stdout }}'
    dest: '{{ misskey_dir }}/tor.txt'

- name: Configure Tor hidden service
  blockinfile:
    path: /etc/tor/torrc
    block: |
      HiddenServiceDir /var/lib/tor/misskey/
      HiddenServicePort 80 unix:/var/run/tor-misskey.sock
      HiddenServiceVersion 3
    marker: '# {mark} ANSIBLE MANAGED BLOCK - Misskey Hidden Service'
    insertafter: EOF
  notify: Reload Tor

- name: Configure Privoxy to route traffic through Tor
  blockinfile:
    path: /etc/privoxy/config
    block: |
      forward-socks5 / 127.0.0.1:9050 .
    marker: '# {mark} ANSIBLE MANAGED BLOCK - Privoxy Configuration'
    insertafter: EOF
  notify: Restart Privoxy

- name: Ensure Privoxy is enabled and running
  systemd:
    name: privoxy
    enabled: yes
    state: started

- name: Deploy Nginx configuration for onion
  template:
    src: templates/nginx_misskey_onion.conf.j2
    dest: /etc/nginx/conf.d/misskey-onion.conf
    owner: root
    group: root
    mode: '0644'
  vars:
    onion_hostname: '{{ tor_hostname.stdout }}'
  notify: Reload Nginx

- name: Check if Nginx onion configuration exists
  stat:
    path: '/etc/nginx/conf.d/misskey-onion.conf'
  register: nginx_onion_conf

- name: Notify user if Nginx onion configuration does not exist
  fail:
    msg: 'Nginx onion configuration file /etc/nginx/conf.d/misskey-onion.conf does not exist.'
  when: not nginx_onion_conf.stat.exists