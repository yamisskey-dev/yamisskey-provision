# tasks/main.yml
- name: Create Minecraft directory
  file:
    path: '{{ minecraft_dir }}'
    state: directory
    mode: '0755'
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'

- name: Create Minecraft data directory
  file:
    path: '{{ minecraft_dir }}/data'
    state: directory
    mode: '0755'
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'

# secrets.ymlの存在確認
- name: Check if secrets file exists
  stat:
    path: '{{ minecraft_secrets_file }}'
  register: minecraft_secrets_file_stat

# 管理者UUIDの生成
- name: Generate admin UUID if not exists
  shell: 'python3 -c "import uuid; print(uuid.uuid4())"'
  register: admin_uuid_output
  when: not minecraft_secrets_file_stat.stat.exists

# RCONパスワードの生成
- name: Generate RCON password if not exists
  shell: 'cat /dev/urandom | tr -dc "a-zA-Z0-9" | fold -w 32 | head -n 1'
  register: rcon_password_output
  when: not minecraft_secrets_file_stat.stat.exists

# 秘密情報の設定
- name: Set secrets facts
  set_fact:
    admin_uuid: "{{ (lookup('file', minecraft_secrets_file) | from_yaml).admin_uuid if minecraft_secrets_file_stat.stat.exists else admin_uuid_output.stdout }}"
    rcon_password: "{{ (lookup('file', minecraft_secrets_file) | from_yaml).rcon_password if minecraft_secrets_file_stat.stat.exists else rcon_password_output.stdout }}"

# 秘密情報の保存（初回のみ）
- name: Save secrets to file
  copy:
    dest: '{{ minecraft_secrets_file }}'
    content: |
      admin_uuid: "{{ admin_uuid }}"
      rcon_password: "{{ rcon_password }}"
    mode: '0600'
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
  when: not minecraft_secrets_file_stat.stat.exists

# ops.jsonの作成
- name: Create ops.json
  copy:
    dest: '{{ minecraft_dir }}/data/ops.json'
    content: |
      [
        {
          "uuid": "{{ admin_uuid }}",
          "name": "admin",
          "level": 4,
          "bypassesPlayerLimit": true
        }
      ]
    mode: '0644'
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
  when: not minecraft_secrets_file_stat.stat.exists

# Docker Compose設定の展開
- name: Copy docker-compose.yml
  template:
    src: templates/minecraft_docker-compose.yml.j2
    dest: '{{ minecraft_dir }}/docker-compose.yml'
    mode: '0644'
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'

# サーバーの起動
- name: Start Minecraft server
  docker_compose:
    project_src: '{{ minecraft_dir }}'
    state: present
    pull: yes

- name: Enable and start Docker service
  systemd:
    name: docker
    state: started
    enabled: yes