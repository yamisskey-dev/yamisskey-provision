- name: Ensure correct permissions
  block:
    - name: Create directory structure
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        owner: "4001"
        group: "4001"
      with_items:
        - "{{ cryptpad_dir }}/config"
        - "{{ cryptpad_dir }}/data"
        - "{{ cryptpad_dir }}/data/files"
        - "{{ cryptpad_dir }}/data/archive"
        - "{{ cryptpad_dir }}/data/pins"
        - "{{ cryptpad_dir }}/data/tasks"
        - "{{ cryptpad_dir }}/data/block"
        - "{{ cryptpad_dir }}/data/blob"
        - "{{ cryptpad_dir }}/data/blobstage"
        - "{{ cryptpad_dir }}/data/decrees"
        - "{{ cryptpad_dir }}/data/logs"
        - "{{ cryptpad_dir }}/customize"

    - name: Create and set permissions for config.js
      template:
        src: cryptpad_config.j2
        dest: "{{ cryptpad_dir }}/config/config.js"
        mode: '0644'
        owner: "4001"
        group: "4001"

    - name: Verify config file permissions
      stat:
        path: "{{ cryptpad_dir }}/config/config.js"
      register: config_stat

    - name: Show config file permissions
      debug:
        msg: "Config file permissions: {{ config_stat.stat }}"

- name: Check if secrets file exists
  stat:
    path: "{{ cryptpad_secrets_file }}"
  register: cryptpad_secrets_file_stat

- name: Generate secret key if not exists
  shell: 'cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 64'
  register: secret_key_output
  when: not cryptpad_secrets_file_stat.stat.exists

- name: Set secret key fact
  set_fact:
    cryptpad_secret_key: "{{ (lookup('file', cryptpad_secrets_file) | from_yaml).secret_key if cryptpad_secrets_file_stat.stat.exists else secret_key_output.stdout }}"

- name: Save secrets to file
  copy:
    dest: "{{ cryptpad_secrets_file }}"
    content: |
      secret_key: "{{ cryptpad_secret_key }}"
  when: not cryptpad_secrets_file_stat.stat.exists
  notify: restart cryptpad

- name: Ensure config directory exists
  file:
    path: "{{ cryptpad_dir }}/config"
    state: directory
    mode: '0755'
    owner: "4001"
    group: "4001"

- name: Copy CryptPad configuration
  template:
    src: cryptpad_config.j2
    dest: "{{ cryptpad_dir }}/config/config.js"
    mode: '0644'
    owner: "4001"
    group: "4001"
  register: config_copy

- name: Debug file existence
  block:
    - name: Check config.js existence
      stat:
        path: "{{ cryptpad_dir }}/config/config.js"
      register: config_stat

    - name: Display config.js status
      debug:
        msg: "config.js exists: {{ config_stat.stat.exists }}, path: {{ cryptpad_dir }}/config/config.js"

    - name: Display config.js contents
      command: "cat {{ cryptpad_dir }}/config/config.js"
      register: config_contents
      when: config_stat.stat.exists

    - name: Show config.js contents
      debug:
        msg: "{{ config_contents.stdout }}"
      when: config_stat.stat.exists

    - name: List config directory contents
      command: "ls -la {{ cryptpad_dir }}/config"
      register: ls_output

    - name: Show directory contents
      debug:
        msg: "{{ ls_output.stdout_lines }}"

- name: Copy docker-compose configuration
  template:
    src: cryptpad_docker-compose.yml.j2
    dest: "{{ cryptpad_dir }}/docker-compose.yml"
    mode: '0644'
    owner: root
    group: root
  notify: restart cryptpad

- name: Copy nginx configuration
  template:
    src: nginx_cryptpad.conf.j2
    dest: /etc/nginx/conf.d/cryptpad.conf
    mode: '0644'
  notify:
    - check nginx configuration
    - reload nginx

- name: Pull CryptPad Docker image
  docker_image:
    name: cryptpad/cryptpad
    tag: version-2024.9.1
    source: pull
    force_source: yes

- name: Start CryptPad containers
  docker_compose:
    project_src: "{{ cryptpad_dir }}"
    state: present
    restarted: yes
  when: config_stat.stat.exists