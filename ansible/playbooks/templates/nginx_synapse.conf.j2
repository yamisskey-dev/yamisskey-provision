server {
    listen 80;
    server_name {{ synapse_server_name }};

    location /.well-known/matrix/client {
        alias /var/www/synapse/.well-known/matrix/client;
        default_type application/json;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name {{ synapse_server_name }};

    ssl_certificate /etc/letsencrypt/live/yami.ski/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yami.ski/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://localhost:8008;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # For WebSocket
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Origin, X-Requested-With, Content-Type, Accept' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # WebSocket timeouts
        proxy_read_timeout 3600s;
        proxy_buffering off;
    }

    access_log /var/log/nginx/synapse_access.log;
    error_log /var/log/nginx/synapse_error.log;
}
