services:
  web:
    build: .
    restart: always
    links:
      - db
      - redis
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:3001"
    networks:
      - internal_network
      - external_network
    volumes:
      - ./files:/misskey/files
      - ./.config:/misskey/.config:ro
    deploy:
      resources:
        limits:
          memory: 16G
        reservations:
          memory: 8G
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  redis:
    restart: always
    image: eqalpha/keydb:alpine
    networks:
      - internal_network
    volumes:
      - ./redis:/data
    command: >
      keydb-server
      --server-threads 4
      --maxclients 20000
      --maxmemory-policy noeviction
      --hz 100
      --tcp-backlog 4096
      --no-appendfsync-on-rewrite yes
      --appendonly yes
      --appendfsync everysec
      --auto-aof-rewrite-percentage 50
      --auto-aof-rewrite-min-size 256mb
      --io-threads 4
      --io-threads-do-reads yes
      --activerehashing yes
      --aof-use-rdb-preamble yes
      --lazyfree-lazy-eviction yes
      --lazyfree-lazy-expire yes
      --lazyfree-lazy-server-del yes
      --dynamic-hz yes
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD", "keydb-cli", "ping"]
      interval: 20s
      timeout: 5s
      retries: 3

  db:
    restart: always
    image: postgres:15-alpine
    networks:
      - internal_network
    env_file:
      - .config/docker.env
    volumes:
      - ./db:/var/lib/postgresql/data
      - ./.config/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    sysctls:
      - kernel.shmmax=34359738368
      - kernel.shmall=8388608
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 20s
      timeout: 5s
      retries: 3

networks:
  internal_network:
    internal: true
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 9000
  external_network:
    external: true
