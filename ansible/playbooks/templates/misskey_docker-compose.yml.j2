version: "3"

services:
  web:
    build: .
    restart: always
    links:
      - db
      - redis
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:3001"
    networks:
      - internal_network
      - external_network
    volumes:
      - ./files:/misskey/files
      - ./.config:/misskey/.config:ro
    deploy:
      resources:
        limits:
          memory: 16G
        reservations:
          memory: 8G
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  redis:
    restart: always
    image: eqalpha/keydb:alpine
    networks:
      - internal_network
    volumes:
      - ./redis:/data
    command: keydb-server --server-threads 4 --maxclients 10000 --maxmemory 4gb --maxmemory-policy allkeys-lru --save "" --appendonly no
    healthcheck:
      test: "keydb-cli ping"
      interval: 5s
      retries: 20
    sysctls:
      net.core.somaxconn: '65535'

  db:
    restart: always
    image: postgres:15-alpine
    networks:
      - internal_network
    env_file:
      - .config/docker.env
    volumes:
      - ./db:/var/lib/postgresql/data
      - ./.config/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      retries: 20
    sysctls:
      vm.swappiness: '10'
      vm.dirty_ratio: '60'
      vm.dirty_background_ratio: '2'
    deploy:
      resources:
        limits:
          memory: 24G
        reservations:
          memory: 16G

networks:
  internal_network:
    internal: true
  external_network:
    external: true